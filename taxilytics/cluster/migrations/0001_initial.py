# -*- coding: utf-8 -*-
# Generated by Django 1.9.9 on 2016-08-31 10:08
from __future__ import unicode_literals

import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import django_util.validators


class Migration(migrations.Migration):

    replaces = [('cluster', '0001_initial'), ('cluster', '0002_auto_20160831_1003')]

    initial = True

    dependencies = [
        ('topic', '0001_initial'),
        ('query', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ClusterConfig',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('algorithm', models.CharField(choices=[('AffinityPropagation', 'Affinity Propagation'), ('DBSCAN', 'DBSCAN'), ('Agglomerative', 'Agglomerative'), ('Birch', 'Birch'), ('KMeans', 'k-Means'), ('MiniBatchKMeans', 'Mini Batch k-Means'), ('MeanShift', 'Mean Shift'), ('Spectral', 'Spectral'), ('Ward', 'Ward')], max_length=20)),
                ('arguments', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default={}, help_text='Additional arguments to pass to the specific cluster model', null=True, validators=[django_util.validators.JsonValidator()])),
            ],
        ),
        migrations.CreateModel(
            name='ClusterModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('arguments', django.contrib.postgres.fields.jsonb.JSONField(blank=True, help_text='Additional arguments for clustering', null=True, validators=[django_util.validators.JsonValidator()])),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('config', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cluster.ClusterConfig')),
                ('data', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='query.TripQuery')),
                ('topic_model', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='topic.TopicModel')),
            ],
        ),
    ]
