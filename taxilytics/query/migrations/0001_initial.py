# -*- coding: utf-8 -*-
# Generated by Django 1.9.9 on 2016-08-31 10:03
from __future__ import unicode_literals

import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import django_util.validators
import entity.query


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('features', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Attribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('attribute', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True, validators=[django_util.validators.JsonValidator()])),
            ],
            bases=(models.Model, entity.query.AttributeQueryMixin),
        ),
        migrations.CreateModel(
            name='Spatial',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('segment', models.CharField(choices=[('start_point', 'start point'), ('geometry', 'full trip'), ('end_point', 'end point')], max_length=11)),
                ('operator', models.CharField(choices=[('contained', 'contained by'), ('intersects', 'intersects'), ('within', 'near')], max_length=20)),
                ('area', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='features.Area')),
            ],
            bases=(models.Model, entity.query.SpatialQueryMixin),
        ),
        migrations.CreateModel(
            name='Temporal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('start_time', models.TimeField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('end_time', models.TimeField(blank=True, null=True)),
            ],
            bases=(models.Model, entity.query.TemporalQueryMixin),
        ),
        migrations.CreateModel(
            name='TripQuery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('limit', models.PositiveIntegerField(blank=True, null=True)),
                ('attribute', models.ManyToManyField(blank=True, to='query.Attribute')),
                ('spatial', models.ManyToManyField(blank=True, to='query.Spatial')),
                ('temporal', models.ManyToManyField(blank=True, to='query.Temporal')),
            ],
            bases=(models.Model, entity.query.TripQueryMixin),
        ),
    ]
